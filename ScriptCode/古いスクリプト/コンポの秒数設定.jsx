
(function(me){

	//-------------------------------------------------------------------------
	var winObj = ( me instanceof Panel) ? me : new Window("palette", "コンポの秒数", [ 0,  0, 220,  185]  ,{resizeable:true, maximizeButton:true, minimizeButton:true});
	//-------------------------------------------------------------------------
	var btnGet = winObj.add("button", [  5,    5,   5+ 210,    5+  25], "Get" );
	var rbFrame = winObj.add("radiobutton", [  5,   35,   5+  60,   35+  25], "フレーム");
	var edFrame = winObj.add("edittext", [  70,   35,   70+ 145,   35+  25], "24");
		var rbSecKoma = winObj.add("radiobutton", [  5,   65,   5+  60,   65+  25], "秒コマ");
	var edSec = winObj.add("edittext", [  70,   65,   75 +  50,   65+  25], "1");	var stSec = winObj.add("statictext", [ 125,   65,  125+  20,   65+  25], "秒");
	var edKoma = winObj.add("edittext", [ 145,   65,  145+  50,   65+  25], "0");	var stKoma = winObj.add("statictext", [ 195,   65,  195+  20,   65+  25], "コマ");	
	var stFps = winObj.add("statictext", [ 65,   95,   65 +  70,   95+  25], "フレームレート");
	var edFps = winObj.add("edittext", [ 140,   95,  140+  75,   95+  25], "24");
		var rbDuration = winObj.add("radiobutton", [  5,   125,   5+  90,   125+  25], "デュレーション");
	var edDuration = winObj.add("edittext", [  100,   125,   100+ 115,   125+  25], "1");
	var btnSet = winObj.add("button", [  5,  155,   5+ 210,  155+  25], "Set" );
	//-------------------------------------------------------------------------
	var setIsFrame = function(mode)	{		switch(mode)		{		case 1:			if (rbFrame.value === true) rbFrame.value = false;			if (rbSecKoma.value === false) rbSecKoma.value = true;			if (rbDuration.value === true) rbDuration.value = false;			break;		case 2:			if (rbFrame.value === true) rbFrame.value = false;			if (rbSecKoma.value === true) rbSecKoma.value = false;			if (rbDuration.value === false) rbDuration.value = true;			break;		case 0:		default:			mode = 0;			if (rbFrame.value === false) rbFrame.value = true;			if (rbSecKoma.value === true) rbSecKoma.value = false;			if (rbDuration.value === true) rbDuration.value = false;			break;		}		edFrame.enabled = (mode === 0);				edSec.enabled		= stSec.enabled		= edKoma.enabled		= stKoma.enabled =  (mode ===1);		stFps.enabled		= edFps.enabled = ( (mode ===0)||(mode ===1));		edDuration.enabled = (mode === 2);	}	setIsFrame(0);	rbFrame.onClick = function(){ setIsFrame(0);}	rbSecKoma.onClick = function(){ setIsFrame(1);}	rbDuration.onClick = function(){ setIsFrame(2);}	//-------------------------------------------------------------------------	var getMode = function()	{		if (rbFrame.value === true){			return 0;		}else if (rbSecKoma.value === true){			return 1;		}else if (rbDuration.value === true){			return 2;		}else{			return 0;		}	}	//-------------------------------------------------------------------------	var getDurationSetting = function()	{		var fps = 24;		if (isNaN(edFps.text)){			edFps.text = 24;		}		fps = edFps.text *1;				var ret = 0;		switch (getMode())		{		case 1:			if ( ( ! isNaN(edSec.text)) && ( ! isNaN(edKoma.text) )){				ret = (edSec.text * 1) + (edKoma.text * 1 /fps);			}			break;		case 2:			if ( ! isNaN(edDuration.text)){				ret = edDuration.text * 1;			}			break;		case 0:		default:			if ( ! isNaN(edFrame.text)){				ret = (edFrame.text * 1)/fps;			}			break;		}		return ret;	}	//-------------------------------------------------------------------------	var setDurationToComps = function()	{		var du = getDurationSetting();		if (du<=0) {			alert("設定値が不正です。");			return;		}		var sel = [];		if ( app.project.selection.length>0){			for (var i=0; i<app.project.selection.length; i++){				if (app.project.selection[i] instanceof CompItem){					sel.push(app.project.selection[i]);				}			}		}		if (sel.length<=0){			alert("コンポを選んでください。");			return;		}		var mes = "以下のコンポの秒数を設定しました。\n\n";		app.beginUndoGroup("コンポの秒数設定");		for (var i=0; i<sel.length;i++){			sel[i].duration = du;			mes += "\"" + sel[i].name + "\"";			mes +=  " : " + sel[i].duration +"秒";			mes += "(" + Math.floor(sel[i].duration) + "+" +  Math.floor((sel[i].duration - Math.floor(sel[i].duration)) * sel[i].frameRate) + ")";			mes += " [" + sel[i].duration * sel[i].frameRate + "]";			mes += "\n";		}		app.endUndoGroup();		alert(mes);	}	//-------------------------------------------------------------------------	btnSet.onClick = setDurationToComps;	//-------------------------------------------------------------------------	var getDurationFromComp = function()	{		var sc = null;		if ( app.project.selection.length>0){			for ( var i=0; i<app.project.selection.length; i++){				if ( app.project.selection[i] instanceof CompItem){					sc = app.project.selection[i];					break;				}			}		}		if (sc === null) {			alert("コンポを一つ選んでください。");			return;		}		edFrame.text =  (sc.duration * sc.frameRate) + "";		edSec.text = Math.floor(sc.duration) + "";		edKoma.text =  Math.floor((sc.duration - Math.floor(sc.duration)) * sc.frameRate) + "";		edFps.text = sc.frameRate + "";		var s = Math.floor(sc.duration) + "";		var ss =  (sc.duration - Math.floor(sc.duration)) + "";		if (ss === "0") {			ss = ".0";		}else {			ss = ss.substr(1);		}		edDuration.text = s + ss;			}	btnGet.onClick = getDurationFromComp;
	//-------------------------------------------------------------------------
	var resizeForm  = function()	{		var b = winObj.bounds;		var w = b[2]-b[0];		if ( w < 215) w = 215;		var bg = btnGet.bounds;		bg[2] = w -5;		btnGet.bounds = bg;		var bs = btnSet.bounds;		bs[2] = w -5;		btnSet.bounds = bs;	}	resizeForm();	winObj.onResize = resizeForm;	
	//-------------------------------------------------------------------------
	if ( ( me instanceof Panel) == false){
		winObj.center(); 
		winObj.show();
	}
	//-------------------------------------------------------------------------
})(this);